<launch>
    <arg name="openrover_node_name" default="rr_openrover_driver" />
    <arg name="config_locks"  default="$(find rr_openrover_driver)/config/twist_mux_locks.yaml"/>
    <arg name="config_topics" default="$(find rr_openrover_driver)/config/twist_mux_topics.yaml"/>

    <!-- OpenRover Driver -->
    <node pkg="rr_openrover_driver" type="openrover_driver_node" name="$(arg openrover_node_name)" respawn="false" output="screen">
        <param name="port" value="/dev/rover" />
        <param name="drive_type" value="2wd" />
        <param name="enable_timeout" type="bool" value="true"/>
        <param name="timeout" type="double" value="0.3"/>
        <param name="closed_loop_control_on" type="bool" value="false" />
        <!--<param name="closed_loop_control_on" type="bool" value="true" />--><!-- Requires fast_data_rate >= 60 -->
        <param name="total_weight" type="double" value="20.41"/>
        <param name="traction_factor" value="1.0"/>
        <param name="odom_covariance_0" value="0.01"/>
        <param name="odom_covariance_35" value="0.03"/>

        <param name="fast_data_rate" value="20.0"/>
        <param name="medium_data_rate" value="2.0"/>
        <param name="Kp" value="20"/>
        <param name="Ki" value="60"/>
        <param name="slow_data_rate" value="1.0"/>
    </node>

    <!-- PS4 Ubuntu Driver -->
    <include file="$(find ds4_driver)/launch/ds4_driver.launch" >
        <arg name="addr" value="" />
        <arg name="use_standard_msgs" value="false" />
    </include>

    <!-- PS4 Mapper -->
    <node pkg="rr_control_input_manager" type="ps4_mapper.py" name="ps4_mapper" output="screen" >
        <rosparam command="load" file="$(find rr_openrover_driver)/config/ps4_controller_config.yaml" />
        <param name="stamped" value="True" />
    </node>


    <!--  Twist Mux  -->
    <node pkg="twist_mux" type="twist_mux" name="twist_mux" output="screen">
        <remap from="cmd_vel_out" to="/cmd_vel/managed"/>

        <rosparam file="$(arg config_locks)"  command="load"/>
        <rosparam file="$(arg config_topics)" command="load"/>
    </node>

    <!-- Control input manager -->
    <node pkg="rr_control_input_manager" type="control_input_manager.py" name="rr_control_input_manager_node" output="log" >
        <rosparam file="$(find rr_control_input_manager)/config/input_topics.yaml" command="load"/>
    </node>

</launch>
